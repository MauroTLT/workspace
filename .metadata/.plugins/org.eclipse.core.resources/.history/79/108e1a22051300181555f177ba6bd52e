package ampliacionT8;

import java.util.ArrayList;

public class CentroDocente {
	private ArrayList <Persona> personas;

	public CentroDocente() {
		this.setPersonas(new ArrayList <Persona>());
	}
	
	public void darAlta(Persona persona) {
		boolean semaforo = false;
		for(int i = 0; i < personas.size() && !semaforo; i++) { //NO usar FOR EACH, provoca errores al comprobar dni ya que lo comprueba con Ã©l mismo
			if(personas.get(i).getDni().equals(persona.getDni())) {
				System.out.println("Persona ya en la lista (DNI's identicos)");
				semaforo = true;
			} else if(i == personas.size() - 1 && !semaforo) {
				this.personas.add(persona);
				semaforo = true;
			}
		}
		if(personas.isEmpty()) {
			this.personas.add(persona);
		}
		
		if(personas.size() >= 3) {
			ordenarInv();
		}
	}
	
	public void darBaja(String dni) {
		boolean semaforo = false;
		for(int i = 0; i < personas.size() && !semaforo; i++) {//NO usar FOR EACH, provoca errores al eliminar personas
			if(personas.get(i).getDni().equals(dni)) {
				personas.remove(personas.get(i));
				semaforo = true;
			} else if(i == (personas.size() - 1) && !semaforo) {
				System.out.println("Persona no encontrada");
			}
		}
		/*for(Persona i : personas) {
			if(i.getDni().equals(dni)) {
				personas.remove(i);
				semaforo = true;
			} else if(personas.indexOf(i) == (personas.size() - 1) && !semaforo) {
				System.out.println("Persona no encontrada");
			}
		}*/
	}
	
	public void visualizar() {
		int cont = 1;
		for(Persona i : personas) {
			System.out.println("\nPersona " + cont + "\n" + i.toString());
			cont++;
		}
	}
	
	public void visualizarSalario() {
		boolean semaforo = false;
		int cont = 1;
		for(Persona i : personas) {
			if(i instanceof Empleado) {
				System.out.println("\nPersona " + cont + "\n" + "Nombre: " + i.getNombre() + ", Apellido: " + i.getApellidos()+ ", Salario: " + ((Empleado) i).getSalario());
				semaforo = true;
				cont++;
			} else if(personas.indexOf(i) == (personas.size() - 1) && !semaforo) {
				System.out.println("No hay personas con salario que mostrar");
			}
		}
	}
	
	public void ordenar() {
		for(int i = 1; i < personas.size(); i++){
			for(int j = 0;j < personas.size()-i;j++) {
				if(personas.get(j).getNombre().compareToIgnoreCase(personas.get(j + 1).getNombre()) > 0) {  // 0 4 2 5
					personas.add(j, personas.get(j + 1));													// 0 2 4 2 5
					personas.remove(personas.lastIndexOf(personas.get(j)));									// 0 2 4 5
					//personas.remove(personas.indexOf(personas.get(j + 2)));
				}
			}
		}
	}	
		public void ordenarInv() {
			for(int i = personas.size(); i > 1 ; i--){
				for(int j = personas.size()-i;j > 0;j--) {
					if(personas.get(j).getNombre().compareToIgnoreCase(personas.get(j + 1).getNombre()) < 0) {  // 0 4 2 5
						personas.add(j, personas.get(j - 1));													// 0 2 4 2 5
						personas.remove(personas.indexOf(personas.get(j)));									// 0 2 4 5
						//personas.remove(personas.indexOf(personas.get(j + 2)));
					}
				}
			}
			
			
	}

	public ArrayList <Persona> getPersonas() {
		return personas;
	}

	public void setPersonas(ArrayList <Persona> personas) {
		this.personas = personas;
	}
	
	
}
