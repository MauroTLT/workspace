package View;

import java.awt.AWTException;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Robot;

import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.SwingConstants;

import Model.Protagonista;

@SuppressWarnings("serial")
public class GameWinView extends JDialog {

	private Thread hilo;
	private final Font font = new Font("TimesRoman", Font.BOLD, 28);
	private JLabel bg, protaImg, protaBackImg, stats, nombre, areatxt, txt, total, totalP, tiempo, tiempoP, dificultad;
	
	public GameWinView(String ruta, String pt, String tiempo2, String dificultad2) {
		this.hilo = new Thread(this::lanzar);
		this.bg = new JLabel();
		this.protaImg = new JLabel();
		this.protaBackImg = new JLabel();
		this.stats = new JLabel();
		this.nombre = new JLabel(Protagonista.getNombre(), SwingConstants.CENTER);
		this.areatxt = new JLabel();
		this.txt = new JLabel("Enhorabuena", SwingConstants.CENTER);
		this.total = new JLabel("Puntos Totales:");
		this.totalP = new JLabel(pt);
		this.tiempo = new JLabel("Tiempo:");
		this.tiempoP = new JLabel(tiempo2);
		this.dificultad = new JLabel(dificultad2);
		darFormato(ruta);
	}

	private void darFormato(String ruta) {
		Image img = new ImageIcon(getClass().getResource("../resources/extras/xeno.jpg")).getImage();
		this.bg.setIcon(new ImageIcon(img.getScaledInstance(2000, 650, Image.SCALE_SMOOTH)));
		this.bg.setBounds(0, 0, 2000, 650);
		this.add(this.bg);
		this.setLayout(null);
		
		this.protaBackImg.setBounds(1500, 425, 250, 275);
		if(ruta.contains("maxim")) {
			img = new ImageIcon(getClass().getResource("../resources/sprites/maximBack.png")).getImage();
		} else {
			img = new ImageIcon(getClass().getResource("../resources/sprites/selanBack.png")).getImage();
		}
		this.protaBackImg.setIcon(new ImageIcon(img.getScaledInstance(250, 275, Image.SCALE_SMOOTH)));
		this.bg.add(protaBackImg);
		
		this.protaImg.setBounds(1050, 250, 250, 275);// 1650
		img = new ImageIcon(getClass().getResource(ruta)).getImage();
		this.protaImg.setIcon(new ImageIcon(img.getScaledInstance(250, 275, Image.SCALE_SMOOTH)));
		this.bg.add(protaImg);
		this.protaImg.setVisible(false);
		
		img = new ImageIcon(getClass().getResource("../resources/extras/frame.png")).getImage();
		this.stats.setIcon(new ImageIcon(img.getScaledInstance(425, 310, Image.SCALE_SMOOTH)));
		this.stats.setLayout(null);
		this.stats.setBounds(1050, 50, 425, 310);
		this.bg.add(stats);
		this.stats.setVisible(false);
		
		this.nombre.setBounds(20,35,375,35);
		this.nombre.setFont(font);
		this.nombre.setForeground(Color.LIGHT_GRAY);
		this.stats.add(nombre);
		this.nombre.setVisible(false);
		
		this.total.setBounds(50,85,335,50);
		this.total.setFont(font);
		this.total.setForeground(Color.LIGHT_GRAY);
		this.totalP.setFont(font);
		this.totalP.setForeground(Color.LIGHT_GRAY);
		this.totalP.setBounds(300,85,100,50);
		this.stats.add(total);
		this.stats.add(totalP);
		this.total.setVisible(false);
		this.totalP.setVisible(false);
		
		this.tiempo.setBounds(90,145,200,50);
		this.tiempo.setFont(font);
		this.tiempo.setForeground(Color.LIGHT_GRAY);
		this.tiempoP.setFont(font);
		this.tiempoP.setForeground(Color.LIGHT_GRAY);
		this.tiempoP.setBounds(235,145,100,50);
		this.stats.add(tiempo);
		this.stats.add(tiempoP);
		this.tiempo.setVisible(false);
		this.tiempoP.setVisible(false);
		
		this.dificultad.setBounds(175,220,125,35);
		this.dificultad.setFont(font);
		this.dificultad.setForeground(Color.LIGHT_GRAY);
		this.stats.add(dificultad);
		this.dificultad.setVisible(false);
		
		this.areatxt.setBounds(1075,400,500,125);
		this.areatxt.setIcon(new ImageIcon(img.getScaledInstance(500, 125, Image.SCALE_SMOOTH)));
		this.bg.add(areatxt);
		this.areatxt.setVisible(false);
		
		this.txt.setBounds(0,0,500,125);
		this.txt.setFont(new Font("TimesRoman", Font.BOLD, 50));
		this.txt.setForeground(new Color(192,192,192,0));
		this.areatxt.add(txt);
		
		this.setSize(1000, 650);
		this.setLocationRelativeTo(null);
		this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		this.setUndecorated(true);
		this.setAlwaysOnTop(true);
		this.setVisible(true);
		
		hilo.start();
	}

	private void lanzar() {
		try {
			Robot robot = new Robot();
			for (int i = 0; i < 100; i++) {
				this.bg.setLocation((int) this.bg.getLocation().getX() - 10,(int) this.bg.getLocation().getY());
				this.protaBackImg.setLocation((int) protaBackImg.getLocation().getX() - 10,(int) protaBackImg.getLocation().getY());
				Thread.sleep(25);
				robot.mouseMove(0, 0);
			}
			this.protaImg.setVisible(true);
			for (int i = 0; i < 60; i++) {
				this.protaImg.setLocation((int) protaImg.getLocation().getX() + 10, (int) protaImg.getLocation().getY());
				Thread.sleep(25);
				robot.mouseMove(0, 0);
			}
			Thread.sleep(500);
			this.stats.setVisible(true);
			Thread.sleep(500);
			this.nombre.setVisible(true);
			Thread.sleep(500);
			this.total.setVisible(true);
			Thread.sleep(500);
			this.totalP.setVisible(true);
			Thread.sleep(500);
			this.tiempo.setVisible(true);
			Thread.sleep(500);
			this.tiempoP.setVisible(true);
			Thread.sleep(500);
			this.dificultad.setVisible(true);
			Thread.sleep(500);
			this.areatxt.setVisible(true);
			while(this.txt.getForeground().getAlpha() < 255) {
				this.txt.setForeground(new Color(192,192,192,this.txt.getForeground().getAlpha()+5));
				Thread.sleep(25);
				robot.mouseMove(0, 0);
			}
			Thread.sleep(2000);
			this.dispose();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
