package enemigo;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class Controller implements KeyListener {
	
	private Modelo modelo;
	private View ventana;
	
	public Controller() {
		this.modelo = new Modelo();
		this.ventana = new View(modelo);
		setActions();
	}

	private void setActions() {
		this.ventana.addKeyListener(this);
		this.ventana.setFocusable(true);
		this.ventana.requestFocus();
	}

	@Override
	public void keyPressed(KeyEvent k) {
		if(k.getKeyCode() == KeyEvent.VK_UP) {
			move(0);
		} else if(k.getKeyCode() == KeyEvent.VK_DOWN) {
			move(1);
		} else if(k.getKeyCode() == KeyEvent.VK_LEFT) {
			move(2);
		} else if(k.getKeyCode() == KeyEvent.VK_RIGHT) {
			move(3);
		}
		
	}

	private void move(int elec) {
		for (int i = 0; i < this.modelo.getTablero().length; i++) {
			for (int j = 0; j < this.modelo.getTablero()[i].length; j++) {
				if (this.modelo.getTablero()[i][j].getPer() != null) {
					switch (elec) {
					case 0:
						this.modelo.getTablero()[i][j].setPer(null);
						this.modelo.getTablero()[i-1][j].setPer(null);
						break;
					case 1:
						this.modelo.getTablero()[i][j].setPer(null);
						this.modelo.getTablero()[i+1][j].setPer(null);
						break;
					case 2:
						this.modelo.getTablero()[i][j].setPer(null);
						this.modelo.getTablero()[i][j-1].setPer(null);
						break;
					case 3:
						this.modelo.getTablero()[i][j].setPer(null);
						this.modelo.getTablero()[i][j+1].setPer(null);
						break;
					}
				}
			}
		}
		
	}

	@Override
	public void keyReleased(KeyEvent arg0) {}

	@Override
	public void keyTyped(KeyEvent arg0) {}
}
