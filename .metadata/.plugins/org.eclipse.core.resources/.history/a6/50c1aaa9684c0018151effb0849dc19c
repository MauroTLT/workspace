package Controller;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ImageIcon;

import Model.Combate;
import Model.Personaje;
import Model.Protagonista;
import Model.Recompensa;
import Model.TableroModel;
import View.BatallaView;
import View.BatoiKillerView;
import View.DadoVista;
import View.GameOverView;
import View.RecompensaView;
import resources.CompoundIcon;

@SuppressWarnings("unused")
public class BatoiKillerController implements ActionListener {
	
	private TableroModel modelo;
	private TitleController title;
	private ElecController elec;
	private BatoiKillerView ventana;
	private DadoVista dado;
	private BatallaView batalla;
	private RecompensaView recompensa;
	private GameOverView gameOver;
	private int movimientos;
	private boolean semaforo = false;
	
	public BatoiKillerController() {
		this.title = new TitleController();
		this.elec = new ElecController();
		this.modelo = new TableroModel(elec.getVentana().getDificultad());
		this.modelo.getCasillas()[5][5].getPersonajes()[1].setRuta(elec.getVentana().getRuta());
		if (elec.getVentana().getNombreTxt().getText().length() > 1) {
			Protagonista.setNombre(elec.getVentana().getNombreTxt().getText());
		}
		this.ventana = new BatoiKillerView(modelo);
		this.dado = new DadoVista();
		setActions();
	}

	private void setActions() {
		this.ventana.getAbajo().addActionListener(this);
		this.ventana.getArriba().addActionListener(this);
		this.ventana.getDerecha().addActionListener(this);
		this.ventana.getIzquierda().addActionListener(this);
		this.ventana.getStop().addActionListener(this);
		this.ventana.getDado().addActionListener(this);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource() == this.ventana.getArriba()) {
			moveHeroe(0x26);
		} else if(e.getSource() == this.ventana.getAbajo()) {
			moveHeroe(0x28);
		} else if(e.getSource() == this.ventana.getIzquierda()) {
			moveHeroe(0x25);
		} else if(e.getSource() == this.ventana.getDerecha()) {
			moveHeroe(0x27);
		} else if(e.getSource() == this.ventana.getStop()) {
			this.movimientos = 0;
		} else if(e.getSource() == this.ventana.getDado()) {
			if (movimientos == 0) {
				semaforo = true;
				this.movimientos = this.modelo.getDado().getNewNumero();
				this.dado.getImg().setIcon(new ImageIcon(getClass().getResource("../resources/extras/" + movimientos + ".png")));
				this.movimientos += Integer.parseInt("" + this.ventana.getVelocidadP().getText().charAt(0));
				this.dado.setVisible(true);
			}
		}
		if(this.movimientos == 0 && semaforo) {
			for (int i = 0; i < this.modelo.getCasillas().length; i++) {
				for (int j = 0; j < this.modelo.getCasillas()[i].length; j++) {
					if(this.modelo.getCasillas()[i][j].getPersonajes()[1] != null) {
						if(this.modelo.getCasillas()[i][j].getEvento() instanceof Combate) {
					        this.batalla = new BatallaView(this.modelo.getCasillas()[i][j]);
							if(this.modelo.getCasillas()[i][j].getPersonajes()[1].getEnergia() <= 0) {
								this.ventana.dispose();
								this.gameOver = new GameOverView(this.modelo.getCasillas()[i][j].getPersonajes()[1].getRuta());
								System.exit(0);
							} else if(this.modelo.getCasillas()[i][j].getPersonajes()[0].getEnergia() <= 0) {
								this.modelo.getCasillas()[i][j].getPersonajes()[1].setOro(this.modelo.getCasillas()[i][j].getPersonajes()[1].getOro()+this.modelo.getCasillas()[i][j].getPersonajes()[0].getOro());
								this.modelo.getCasillas()[i][j].getPersonajes()[0] = null;
								Image fondo = new ImageIcon(getClass().getResource(this.modelo.getCasillas()[i][j].getEdificio().getRuta())).getImage();
								Image personaje = new ImageIcon(getClass().getResource(ventana.getModelo().getCasillas()[i][j].getPersonajes()[1].getRuta())).getImage();
								this.ventana.getTablero()[i][j].setIcon(new CompoundIcon(
										new ImageIcon(fondo.getScaledInstance(60, 60, Image.SCALE_SMOOTH)),
										new ImageIcon(personaje.getScaledInstance(60, 60, Image.SCALE_SMOOTH))
										));
							}
							this.modelo.getCasillas()[i][j].setEvento(Recompensa.getInstance());
						} else {
							recompensa = new RecompensaView(this.modelo.getCasillas()[i][j]);
						}
						this.ventana.actualizarStats(this.modelo.getCasillas()[i][j].getPersonajes()[1]);
					}
				}
			}
			moveEnemy();
			semaforo = false;
		}
		this.ventana.getDadoNum().setText("" + movimientos);
	}

	private void moveEnemy() {
		int elec = this.modelo.getDado().getNew4();
		int fila = 0;
		int columna = 0;
		Personaje enemy = null;
		for (int i = 0; i < this.modelo.getCasillas().length; i++) {
			for (int j = 0; j < this.modelo.getCasillas()[i].length; j++) {
				if(this.modelo.getCasillas()[i][j].getPersonajes()[0] != null) {
					elec = this.modelo.getDado().getNew4();
					enemy = this.modelo.getCasillas()[i][j].getPersonajes()[0];
					fila = i;
					columna = j;
					Image personaje;
					Image fondo = new ImageIcon(getClass().getResource(this.modelo.getCasillas()[fila][columna].getEdificio().getRuta())).getImage();
					if(this.ventana.getModelo().getCasillas()[fila][columna].getPersonajes()[1] != null) {
						personaje = new ImageIcon(getClass().getResource(this.ventana.getModelo().getCasillas()[fila][columna].getPersonajes()[1].getRuta())).getImage();
						this.ventana.getTablero()[fila][columna].setIcon(new CompoundIcon(
								new ImageIcon(fondo.getScaledInstance(60, 60, Image.SCALE_SMOOTH)),
								new ImageIcon(personaje.getScaledInstance(60, 60, Image.SCALE_SMOOTH))
								));
					} else {
						this.ventana.getTablero()[fila][columna].setIcon(new ImageIcon(fondo.getScaledInstance(60, 60, Image.SCALE_SMOOTH)));
					}
					this.ventana.getModelo().getCasillas()[fila][columna].getPersonajes()[0] = null;
					this.modelo.getCasillas()[fila][columna].setEvento(Recompensa.getInstance());
					switch (elec) {
					case 1: //Arriba
						if (fila - 1 < 0 || this.ventana.getModelo().getCasillas()[fila - 1][columna].getPersonajes()[0] != null) {
							System.out.println("Casilla Inalcanzable");
						} else {
							fila--;
						}
						break;
					case 2: //Abajo
						if (fila + 1 > 10 || this.ventana.getModelo().getCasillas()[fila + 1][columna].getPersonajes()[0] != null) {
							System.out.println("Casilla Inalcanzable");
						} else {
							fila++;
						}
						break;
					case 3: //Izquierda
						if (columna - 1 < 0 || this.ventana.getModelo().getCasillas()[fila][columna - 1].getPersonajes()[0] != null) {
							System.out.println("Casilla Inalcanzable");
						} else {
							columna--;
						}
						break;
					case 4: //Derecha
						if (columna + 1 > 10 || this.ventana.getModelo().getCasillas()[fila][columna + 1].getPersonajes()[0] != null) {
							System.out.println("Casilla Inalcanzable");
						} else {
							columna++;
						}
						break;
					}
					this.ventana.getModelo().getCasillas()[fila][columna].getPersonajes()[0] = enemy;
					this.modelo.getCasillas()[fila][columna].setEvento(Combate.getInstance());
					fondo = new ImageIcon(getClass().getResource(this.modelo.getCasillas()[fila][columna].getEdificio().getRuta())).getImage();
					if(this.ventana.getModelo().getCasillas()[fila][columna].getPersonajes()[1] != null) {
						personaje = new ImageIcon(getClass().getResource("../resources/extras/battle.png")).getImage();
					} else {
						personaje = new ImageIcon(getClass().getResource(ventana.getModelo().getCasillas()[fila][columna].getPersonajes()[0].getRuta())).getImage();
					}
					this.ventana.getTablero()[fila][columna].setIcon(new CompoundIcon(
							new ImageIcon(fondo.getScaledInstance(60, 60, Image.SCALE_SMOOTH)),
							new ImageIcon(personaje.getScaledInstance(60, 60, Image.SCALE_SMOOTH))
							));
				}
			}
		}
		
	}

	private void moveHeroe(int elec) {
		if(this.movimientos > 0) {
			int fila = 0;
			int columna = 0;
			Personaje per = null;
			for (int i = 0; i < this.modelo.getCasillas().length; i++) {
				for (int j = 0; j < this.modelo.getCasillas()[i].length; j++) {
					if(this.modelo.getCasillas()[i][j].getPersonajes()[1] != null) {
						per = this.modelo.getCasillas()[i][j].getPersonajes()[1];
						fila = i;
						columna = j;
					}
				}
			}
			Image personaje;
			Image img = new ImageIcon(getClass().getResource(this.modelo.getCasillas()[fila][columna].getEdificio().getRuta())).getImage();
			this.ventana.getTablero()[fila][columna].setIcon(new ImageIcon(img.getScaledInstance(60, 60, Image.SCALE_SMOOTH)));
			if(this.modelo.getCasillas()[fila][columna].getPersonajes()[0] != null) {
				img = new ImageIcon(getClass().getResource(this.modelo.getCasillas()[fila][columna].getPersonajes()[0].getRuta())).getImage();
				this.ventana.getTablero()[fila][columna].setIcon(new CompoundIcon(this.ventana.getTablero()[fila][columna].getIcon(), new ImageIcon(img.getScaledInstance(60, 60, Image.SCALE_SMOOTH))));
			}
			this.ventana.getModelo().getCasillas()[fila][columna].getPersonajes()[1] = null;
			switch (elec) {
			case 0x26: //Arriba
				if (fila - 1 < 0) {
					System.out.println("Casilla Inalcanzable");
				} else {
					fila--;
					this.movimientos--;
				}
				break;
			case 0x28: //Abajo
				if (fila + 1 > 10) {
					System.out.println("Casilla Inalcanzable");
				} else {
					fila++;
					this.movimientos--;
				}
				break;
			case 0x25: //Izquierda
				if (columna - 1 < 0) {
					System.out.println("Casilla Inalcanzable");
				} else {
					columna--;
					this.movimientos--;
				}
				break;
			case 0x27: //Derecha
				if (columna + 1 > 10) {
					System.out.println("Casilla Inalcanzable");
				} else {
					columna++;
					this.movimientos--;
				}
				break;
			}
			this.ventana.getModelo().getCasillas()[fila][columna].getPersonajes()[1] = per;
			img = new ImageIcon(getClass().getResource(this.modelo.getCasillas()[fila][columna].getEdificio().getRuta())).getImage();
			if(this.ventana.getModelo().getCasillas()[fila][columna].getPersonajes()[0] != null) {
				personaje = new ImageIcon(getClass().getResource("../resources/extras/battle.png")).getImage();
			} else {
				personaje = new ImageIcon(getClass().getResource(ventana.getModelo().getCasillas()[fila][columna].getPersonajes()[1].getRuta())).getImage();
			}
			this.ventana.getTablero()[fila][columna].setIcon(new CompoundIcon(
					new ImageIcon(img.getScaledInstance(60, 60, Image.SCALE_SMOOTH)),
					new ImageIcon(personaje.getScaledInstance(60, 60, Image.SCALE_SMOOTH))
					));
		}
	}

	public TitleController getTitle() {
		return title;
	}

	public void setTitle(TitleController title) {
		this.title = title;
	}

	public ElecController getElec() {
		return elec;
	}

	public void setElec(ElecController elec) {
		this.elec = elec;
	}

	public TableroModel getModelo() {
		return modelo;
	}

	public void setModelo(TableroModel modelo) {
		this.modelo = modelo;
	}

	public BatoiKillerView getVentana() {
		return ventana;
	}

	public void setVentana(BatoiKillerView ventana) {
		this.ventana = ventana;
	}

}
